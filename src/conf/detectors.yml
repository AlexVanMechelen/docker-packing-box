Analyze_PE:
  categories:
    - PE
  comment: Relies on pefile and peutils with a userdb.txt signatures database.
  description: Wraps around various tools and provides some additional checks/information to produce a centralized report of a PE file.
  source: https://github.com/hiddenillusion/AnalyzePE
  status: useless
  maintained: false

ASL:
  categories:
    - PE
  comment: Uses a signature database (userdb.txt) slightly more recent than PEiD, but works the same way.
  description: Free windows software. Detect packer, compiler, protector, .NET obfuscator or binary packed data (rar, zip ,iso ,img , ...).
  source: https://github.com/ExeinfoASL/ASL
  status: useless

Bintropy:
  categories:
    - ELF
    - PE
  description: Bintropy is an analysis tool that estimates the likelihood that a binary file contains compressed or encrypted bytes.
  install:
    - pip: bintropy
  references:
    - https://ieeexplore.ieee.org/document/4140989
  multiclass: false
  source: https://github.com/dhondta/docker-packing-box
  status: ok

DIE:
  categories:
    - All
  command: /opt/detectors/die_lin64_portable/diec.sh {path}
  description: Detect It Easy (DIE) is a program for determining types of files.
  install:
    - gitr: https://github.com/horsicq/DIE-engine.git
    - cd:   /tmp/DIE-engine
    - exec:
      - chmod +x build_lin64.sh
      - ./build_lin64.sh 2>/dev/null
      - find /tmp/DIE-engine/release -type f -exec tar xzf {} -C /opt/detectors \;
      - tar xf /tmp/die.tar.xz -C /opt/detectors/die_lin64_portable
  silent:
    - "\\+{1,2} ([a-z]{2,12}|[A-Z]+([-_][A-Z]+)*)"
    - "[a-z]{2,12}:"
  source: https://github.com/horsicq/Detect-It-Easy
  status: ok

Exeinfo_PE:
  categories:
    - PE
  description: Exeinfo PE is a program that lets you verify .exe files and check out all their properties. You can also change the file name, directly open the .exe, or simply delete it. Another piece of info provided is the exact size and the point of entry. In short, you can access dozens of different options to edit any Windows executable file.
  source: https://exeinfo-pe.fr.uptodown.com/windows
  status: info

Exescan:
  categories:
    - PE
  comment: Relies on pefile and peutils with a userdb.txt signatures database and also the entropy-based function `peutils.is_probably_packed`.
  description: ExeScan is a console based tool to detect anomalies in PE (Portable Executable) files. It quickly scans given executable file and detect all kind of anomalies in its PE header fields including checksum verifications, size of various header fields, improper size of raw data, non-ascii/empty section names etc.
  source: https://github.com/cysinfo/Exescan
  status: info
  maintained: false

Language_2000:
  categories:
    - PE
  comment: Candidate for integration.
  description: Language 2000 is the ultimate compiler detection utility. Using this program you can determine which compiler used to make your binary file or with which compressor the file is compressed.
  source: https://farrokhi.net/language/
  status: info
  maintained: false

Manalyze:
  categories:
    - PE
  command: /usr/local/bin/manalyze -p packer {path} 2>/dev/null
  description: A static analyzer for PE executables.
  install:
    - git:  https://github.com/JusticeRage/Manalyze
    - exec: mv /tmp/Manalyze /opt/detectors/manalyze
    - setp: /opt/detectors/manalyze
    - make: bin -j5
  source: https://github.com/JusticeRage/Manalyze
  status: ok

NPEFileAnalyzer:
  categories:
    - PE
  comment: PEiD-like detection.
  description: NPE File Analyzer is a utility that allow users to view and edit 32bit and 64bit Portable Executable (PE) files, such as .EXE .DLL and .SYS files. This tool provides functions for inspection of unknown binaries, you can analyze sections, resources, import and export tables, relocations, TlsTable, and much more. It has a built-in process manager to analyze running processes and loaded modules.
  source: https://www.novirusthanks.org/products/npe-file-analyzer/
  status: info

PE-Bear:
  categories:
    - PE
  description: PE-bear is a freeware reversing tool for PE files. Its objective is to deliver fast and flexible “first view” for malware analysts, stable and capable to handle malformed PE files.
  source: https://github.com/hasherezade/pe-bear-releases
  status: info

PeFrame:
  categories:
    - PE
  command: /usr/local/bin/peframe -sj {path}
  description: Open source tool to perform static analysis on Portable Executable malware and malicious MS Office documents.
  install:
    - pip:  git+https://github.com/digitalsleuth/peframe
  source: https://github.com/guelfoweb/peframe
  status: ok

PePack:
  categories:
    - PE
  command: /usr/bin/pepack -d {db} {path}
  description: Check if a PE file is packed. This tool belongs to pev, an open source, full-featured, multiplatform command line toolkit to work with PE (Portable Executables) binaries.
  install:
    - apt:  pev
  source: https://github.com/merces/pev
  status: ok

PEiD:
  categories:
    - PE
  description: PEiD detects most common packers, cryptors and compilers for PE files.
  install:
    - pip: peid
  references:
    - https://www.aldeid.com/wiki/PEiD
    - www.softpedia.com/get/Programming/Packers-Crypters-Protectors/PEiD-updated.shtml
    - https://github.com/ynadji/peid/
  source: https://github.com/wolfram77web/app-peid
  status: ok
  maintained: false

PortEx:
  categories:
    - MSDOS
    - PE
  description: Java library to analyse Portable Executable files with a special focus on malware analysis and PE malformation robustness.
  install:
    - wget: https://github.com/katjahahn/PortEx/raw/master/portex_2.12-3.0.0_FAT.jar
    - exec: mv /tmp/portex.jar /opt/detectors/
    - cd:   /opt/detectors
    - java: portex.jar
  source: https://github.com/katjahahn/PortEx
  status: ok

PyPackerDetect:
  categories:
    - PE
  comment: Relies on PEiD but also uses custom heuristics (e.g. known packer section names, entrypoint in non-standard section, threshhold of non-standard sections reached, low number of imports and overlapping entrypoint sections).
  description: A complete refactoring of the original PyPackerDetect to a Python package with a console script to detect whether an executable is packed.
  install:
    - pip: pypackerdetect
  source: https://github.com/dhondta/PyPackerDetect
  status: ok

PyPeid:
  categories:
    - PE
  description: Yet another implementation of PEiD with yara-python.
  install:
    - gitr: https://github.com/FFRI/pypeid.git
    - cd:   /tmp/pypeid
    - exec:
      - poetry build
      - find dist -iname *.whl -exec pip3 install {} \;
  source: https://github.com/FFRI/pypeid
  status: ok
  maintained: false

RDG:
  categories:
    - PE
  description: RDG Packer Detector is a detector for packers, Cryptors, Compilers, Packers Scrambler, Joiners, Installers.
  source: http://www.rdgsoft.net
  status: info
  maintained: false

RetDec:
  categories:
    - All
  description: RetDec is a retargetable machine-code decompiler based on LLVM.
  source: https://github.com/avast/retdec
  status: info

