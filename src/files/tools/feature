#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pbox import *
from tinyscript import *


__script__       = "Feature manipulation tool"
__version__      = "1.0.0"
__contributors__ = [
    {'author': "Alex Van Mechelen", 'reason': "largely contributed to advanced feature engineering and proposed the "
                                              "creation of this tool"},
]
__doc__         = """
This tool aims to manipulate a feature set in many ways including its creation, update, selection, merging or export.
"""
__description__ = "Manipulate feature sets for use with Machine Learning"
__examples__    = [
    "show custom-features.yml",
]


conf_does_not_exist = lambda f: ts.file_does_not_exist(Locator(f"conf://{f}", new=True))
conf_does_not_exist.__name__ = "non-existing configuration file"


if __name__ == '__main__':
    sparsers = parser.add_subparsers(dest="command", metavar="CMD", title="positional argument",
                                 help="command to be executed")
    add_argument(sparsers.add_parser("browse", help="browse features set's metadata"), "exeformat", "features-set")
    # compute
    export = sparsers.add_parser("export", help="export feature definitions to a given format")
    add_argument(export, "expformat", "features-set")
    insp = sparsers.add_parser("inspect", help="inspect the selected features of a target set")
    add_argument(insp, "exeformat", "features-set", "query")
    # merge
    # plot
    # remove
    select = sparsers.add_parser("select", help="select features from a target set")
    select.add_argument("destination", type=conf_does_not_exist,
                        help="destination YAML file with the selected features")
    add_argument(select, "exeformat", "features-set", "query")
    add_argument(sparsers.add_parser("show", help="show statistics about the target features set"), "features-set")
    # update
    initialize(noargs_action="usage")
    configure_logging(args.verbose)
    set_yaml(args)
    # compute features registry
    Features()
    # now execute
    Features.source = args.config_file = args.features_set
    getattr(Features, args.command)(**vars(args))

