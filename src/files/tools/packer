#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pbox import *
from pbox.__info__ import *
from tinyscript import *
from tqdm import tqdm


__version__     = "1.0.0"
__doc__         = """
This tool simply packs (using Packer.pack) with the selected packer an input executable or folder of executables.
"""
__examples__    = []
__description__ = "Pack an input executable/folder with the selected packer"


if __name__ == '__main__':
    parser.add_argument("packer", type=Packer.get, help="selected packer")
    parser.add_argument("executable", help="executable or folder containing executables")
    parser.add_argument("-p", "--prefix", help="string to be prepended to the filename")
    initialize(noargs_action="usage", multi_level_debug=True)
    logging.configLogger(logger, ["INFO", "DEBUG"][args.verbose], fmt=LOG_FORMATS[args.verbose], relative=True)
    p, rn = ts.Path(args.executable), lambda x: x.rename(x.dirname.joinpath(args.prefix + x.filename))
    delattr(args, "executable")
    if p.is_file():
        args.packer.pack(p.absolute(), **vars(args))
        if args.prefix:
            rn(p)
    elif p.is_dir():
        n, pbar = sum(1 for _ in p.listdir(ts.is_executable)), None
        logger.debug("packing files from folder %s..." % p)
        for f in p.listdir(ts.is_executable):
            if pbar is None:
                pbar = tqdm(total=n, unit="executable")
            args.packer.pack(f.absolute(), **vars(args))
            if args.prefix:
                rn(f)
            pbar.update()
        if n == 0:
            logger.warning("No executable found")
        else:
            pbar.close()

