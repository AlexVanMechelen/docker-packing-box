#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pboxtools import *


def parse(output):
    p, patterns = None, []
    for l in output.splitlines():
        try:
            r = re.search(r"^\[ .+? \] The PE is packed with ([^\(\d]+)", l).group(1)
            return r.strip().replace(" ", "-").lower()
        except (AttributeError, TypeError):
            pass
        if "The PE is possibly packed." in l:
            p = "unknown"
        if p == "unknown" and "Unusual section name found:" in l:
            s = l.split(":", 1)[1].strip()
            if len(s) > 0:
                patterns.append(s)  # possibly a string of interest for identifying the packer
                             # e.g.: petite
    return p if len(patterns) == 0 else patterns


if __name__ == "__main__":
    # https://github.com/JusticeRage/Manalyze/blob/master/plugins/plugin_packer_detection.cpp
    run("Manalyze", parse_func=parse, exe_type="pe", exe_help="path to the PE file")

