#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pboxtools import *


def _disp(data, name=""):
    if isinstance(data, tuple):
        if name:
            print("{}: {} (average)".format(name, data[1]))
        else:
            print("[DEBUG] Entropy (average): {}".format(data[1]))
        for i, j in enumerate(data[0]):
            print(("  #{: <%s}: {}" % len(str(len(data[0])))).format(i + 1, "-" if j is None else j))
    else:
        if name:
            print("{}: {} (average)".format(name, data or "-"))
        else:
            print("[DEBUG] Entropy (average): {}".format(data[1]))


def execute(name, **kwargs):
    a, b, p, v = not kwargs['all_blocks'], kwargs['blocksize'], kwargs['path'], kwargs.get('verbose', False)
    _last = lambda x: x[-1] if isinstance(x, (list, tuple)) else x
    f = kwargs.get('full', False)
    try:
        r = bintropy(p, f, b, a)
        if v:
            print("[DEBUG] Entropy (Shannon): {}".format(bintropy(p, True, 0, False)))
            if isinstance(r, dict):
                print("[DEBUG] Entropy per section:")
                for n, d in r.items():
                    _disp(d, n)
            elif isinstance(r, tuple):
                _disp(r)
        if f:
            return str(_last(r)), ""
        else:
            if len(r) == 0:
                return "", "This file has no section"
            return "\n".join(("{: <%d}: {}" % max(map(len, r.keys()))).format(n, _last(e)) for n, e in r.items()), ""
    except Exception as e:
        return "", str(e)


if __name__ == "__main__":
    run("Bintropy", exec_func=execute, normalize_output=False,
        parser_args=[(1, ("-a", "--all-blocks"), {'action': "store_true", 'help': "consider all blocks (even those in "
                                                                                "which more than the half are zeros)"}),
                     (2, ("-f", "--full"), {'action': "store_true", 'help': "consider the whole executable"}),
                     (3, ("--blocksize", ), {'type': int, 'default': 256, 'help':"block size to be considered"})])

