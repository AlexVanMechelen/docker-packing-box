#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pbox import *
from pbox.__info__ import *
from tinyscript import *
from tinyscript.report import *
try:  # from Python3.9
    import mdv3 as mdv
except ImportError:
    import mdv


__script__      = "packing-box"
__version__     = "1.0.1"
__description__ = "Display this help message or packer's help"


BANNER_ARG   = "packer"
BANNER_FONT  = "starwars"
BANNER_STYLE = {'fgcolor': "lolcat"}
MD_TEMPLATE  = """
This Docker image is a ready-to-use platform for making datasets of packed and not packed executables, especially for training machine learning models.
"""


def overview(show=False):
    """ Display an overview of tools, detectors, packers, unpackers and datasets. """
    md, n = Report(Text(MD_TEMPLATE)), 0
    tools = []
    tools_headers = ["Name", "Description", "Version"]
    for tool in ts.Path(__file__).dirname.listdir(lambda f: f.is_file()):
        row = [tool.stem, "", ""]
        try:
            for line in tool.read_text().splitlines():
                if "__version__" in line or "__description__" in line:
                    row[[1, 2]["__version__" in line]] = line.split("=", 1)[-1].strip(" \"")
        except UnicodeDecodeError:
            continue
        if row[1]:
            tools.append(row)
    md.append(Section("Tools (%d)" % len(tools)), Table(tools, column_headers=tools_headers))
    for cls in [Detector, Packer, Unpacker, Dataset]:
        md.append(*cls.summary(show))
    return md.md()


if __name__ == '__main__':
    parser.add_argument("-p", "--packer", help="get help for a particular packer")
    parser.add_argument("--show-all", action="store_true", help="show all packers, even those that are broken")
    initialize()
    print(mdv.main(overview(args.show_all) if args.packer is None else Packer.get(args.packer).help()))

