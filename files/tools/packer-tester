#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pbox import *
from tinyscript import *


__author__      = "Alexandre D'Hondt"
__email__       = "alexandre.dhondt@gmail.com"
__version__     = "1.0.1"
__copyright__   = ("A. D'Hondt", 2021)
__license__     = "gpl-3.0"
__doc__         = """
This utility aims to test if a packer interface is well implemented.
"""
__description__ = "Test if a packer is well implemented (based on /opt/packers/packers.yml)"


if __name__ == '__main__':
    parser.add_argument("packer", default=[], action="extend", nargs="*", help="specific packer to test")
    parser.add_argument("-f", "--file", default=[], action="extend", nargs="*", help="file to test the packer on")
    initialize()
    for packer in PACKERS:
        name = packer.__class__.__name__
        if not args.packer or packer.name in list(map(lambda x: x.lower(), args.packer)):
            if packer.status == 0:
                logger.warning("Packer is broken ; skipping...")
                continue
            elif packer.status == 1:
                logger.warning("Packer is not installed correctly ; skipping...")
                continue
            try:
                packer.test(*args.file)
            except:
                logger.critical("Packer test failed: %s" % name)
                raise

